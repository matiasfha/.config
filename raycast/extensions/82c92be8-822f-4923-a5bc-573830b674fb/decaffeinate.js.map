{
  "version": 3,
  "sources": ["../src/decaffeinate.ts", "../src/utils.ts"],
  "sourcesContent": ["import { stopCaffeinate } from \"./utils\";\n\nexport default async () => {\n  await stopCaffeinate({ menubar: true, status: true }, \"Your Mac is now decaffeinated\");\n};\n", "import { getPreferenceValues, launchCommand, LaunchType, showHUD } from \"@raycast/api\";\nimport { exec, execSync } from \"node:child_process\";\n\ntype Preferences = {\n  preventDisplay: boolean;\n  preventDisk: boolean;\n  preventSystem: boolean;\n  icon: string;\n};\n\ntype Updates = {\n  menubar: boolean;\n  status: boolean;\n};\n\nexport async function startCaffeinate(updates: Updates, hudMessage?: string, additionalArgs?: string) {\n  if (hudMessage) {\n    await showHUD(hudMessage);\n  }\n  await stopCaffeinate({ menubar: false, status: false });\n  exec(`/usr/bin/caffeinate ${generateArgs(additionalArgs)} || true`);\n  await update(updates, true);\n}\n\nexport async function stopCaffeinate(updates: Updates, hudMessage?: string) {\n  if (hudMessage) {\n    await showHUD(hudMessage);\n  }\n  execSync(\"/usr/bin/killall caffeinate || true\");\n  await update(updates, false);\n}\n\nasync function update(updates: Updates, caffeinated: boolean) {\n  if (updates.menubar) {\n    await tryLaunchCommand(\"index\", { caffeinated });\n  }\n  if (updates.status) {\n    await tryLaunchCommand(\"status\", { caffeinated });\n  }\n}\n\nasync function tryLaunchCommand(commandName: string, context: { caffeinated: boolean }) {\n  try {\n    await launchCommand({ name: commandName, type: LaunchType.Background, context });\n  } catch (error) {\n    // Handle error if command is not enabled\n  }\n}\n\nfunction generateArgs(additionalArgs?: string) {\n  const preferences = getPreferenceValues<Preferences>();\n  const args = [];\n\n  if (preferences.preventDisplay) args.push(\"d\");\n  if (preferences.preventDisk) args.push(\"m\");\n  if (preferences.preventSystem) args.push(\"i\");\n  if (additionalArgs) args.push(` ${additionalArgs}`);\n\n  return args.length > 0 ? `-${args.join(\"\")}` : \"\";\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GCAA,IAAAI,EAAwE,wBACxEC,EAA+B,8BAuB/B,eAAsBC,EAAeC,EAAkBC,EAAqB,CACtEA,GACF,QAAM,WAAQA,CAAU,KAE1B,YAAS,qCAAqC,EAC9C,MAAMC,EAAOF,EAAS,EAAK,CAC7B,CAEA,eAAeE,EAAOF,EAAkBG,EAAsB,CACxDH,EAAQ,SACV,MAAMI,EAAiB,QAAS,CAAE,YAAAD,CAAY,CAAC,EAE7CH,EAAQ,QACV,MAAMI,EAAiB,SAAU,CAAE,YAAAD,CAAY,CAAC,CAEpD,CAEA,eAAeC,EAAiBC,EAAqBC,EAAmC,CACtF,GAAI,CACF,QAAM,iBAAc,CAAE,KAAMD,EAAa,KAAM,aAAW,WAAY,QAAAC,CAAQ,CAAC,CACjF,MAAgB,CAEhB,CACF,CD7CA,IAAOC,EAAQ,SAAY,CACzB,MAAMC,EAAe,CAAE,QAAS,GAAM,OAAQ,EAAK,EAAG,+BAA+B,CACvF",
  "names": ["decaffeinate_exports", "__export", "decaffeinate_default", "__toCommonJS", "import_api", "import_node_child_process", "stopCaffeinate", "updates", "hudMessage", "update", "caffeinated", "tryLaunchCommand", "commandName", "context", "decaffeinate_default", "stopCaffeinate"]
}
